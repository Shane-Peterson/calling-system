{"version":3,"sources":["queue.js","stack.js","linked-list.js","tree.js","main.js"],"names":["divScreen","document","querySelector","btnCreateNumber","btnCallNumber","spanNewNumber","spanQueue","queue","Set","n1","onclick","add","call","innerHTML","toString","JSON","stringify","size","m","shift","delete","spanStack","btnEnter","btnExit","stack","n2","m2","pop","console","log","createNode","data","value","next","createList","appendList","list","node","x","removeFromList","pre","travelList","fn","get","index","n","node2","newList","children","parent","createTree","addChild","newNode","push","travel","tree","forEach","child","removeNode","splice","child1","child2","subChild1"],"mappings":"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","file":"main.e1a07fcc.map","sourceRoot":"..\\src","sourcesContent":["import './queue.css'\r\nconst divScreen = document.querySelector('#screen'),\r\n  btnCreateNumber = document.querySelector('#createNumber'),\r\n  btnCallNumber = document.querySelector('#callNumber'),\r\n  spanNewNumber = document.querySelector('#newNumber'),\r\n  spanQueue = document.querySelector('#queue')\r\n\r\n\r\nlet queue = new Set(),\r\n  n1 = 0\r\nbtnCreateNumber.onclick = () => {\r\n  n1++\r\n  queue.add.call(queue, n1)\r\n  spanNewNumber.innerHTML = n1.toString()\r\n  spanQueue.innerHTML = JSON.stringify([...queue])\r\n}\r\n\r\nbtnCallNumber.onclick = () => {\r\n  if (queue.size === 0) {\r\n    return\r\n  }\r\n  const m = [...queue].shift()\r\n  queue.delete.call(queue, m)\r\n  divScreen.innerHTML = `请 ${m} 号就餐`\r\n  spanQueue.innerHTML = JSON.stringify.call(JSON, [...queue])\r\n}\r\n\r\n","const spanStack = document.querySelector('#stack'),\r\n  btnEnter = document.querySelector('#enter'),\r\n  btnExit = document.querySelector('#exit')\r\n\r\nlet stack = new Set(),\r\n  n2 = 0\r\nbtnEnter.onclick = () => {\r\n  if (stack.size === 0) {\r\n    n2 = 0\r\n  }\r\n  n2++\r\n  stack.add.call(stack, n2)\r\n  spanStack.innerHTML = JSON.stringify.call(JSON, [...stack])\r\n}\r\nbtnExit.onclick = () => {\r\n  if (stack.size === 0) {\r\n    return\r\n  }\r\n  const m2 = [...stack].pop()\r\n  console.log(m2)\r\n  stack.delete.call(stack, m2)\r\n  spanStack.innerHTML = JSON.stringify.call(JSON, [...stack])\r\n}","const createNode = value => {\r\n  return {\r\n    data: value,\r\n    next: null\r\n  }\r\n}\r\n\r\nconst createList = value => {\r\n  return createNode(value)\r\n}\r\n\r\n\r\nconst appendList = (list, value) => {\r\n  const node = createNode(value)\r\n  let x = list\r\n  while (x.next) {\r\n    x = x.next\r\n  }\r\n  x.next = node\r\n  return node\r\n}\r\n\r\nconst removeFromList = (list, node) => {\r\n  let x = list\r\n  let pre = node\r\n  while (x !== node && x !== null) {\r\n    pre = x\r\n    x = x.next\r\n  }\r\n  if(x === null){\r\n    return false\r\n  }else if(x === pre){\r\n    pre = x.next\r\n    return pre\r\n  }else {\r\n    pre.next = x.next\r\n    return list\r\n  }\r\n}\r\n\r\nconst travelList = (list, fn) => {\r\n  let x = list\r\n  while (x) {\r\n    fn(x)\r\n    x = x.next\r\n  }\r\n}\r\n\r\nconst get = (list, index) => {\r\n  let x = list,\r\n    n = 0\r\n  while (x) {\r\n    if (n === index) {\r\n      return x\r\n    }\r\n    x = x.next\r\n    n++\r\n  }\r\n  return false\r\n}\r\n\r\nconst list = createList(10)\r\nconst node = list\r\nconst node2 = appendList(list, 20)\r\n// const node3 = appendList(list, 30)\r\n// const node4 = appendList(list, 40)\r\n// const node5 = appendList(list, 50)\r\n// const node6 = appendList(list, 60)\r\n\r\nconst newList = removeFromList(list, node)\r\n// console.log(newList)\r\n// console.log(list)\r\n\r\n// travelList(list, console.log)\r\n\r\n\r\n// console.log(get(list, 2))\r\n\r\n","const createNode = (value) => {\r\n  return {\r\n    data: value,\r\n    children: null,\r\n    parent: null\r\n  }\r\n}\r\nconst createTree = (value) => {\r\n  return createNode(value)\r\n}\r\n\r\n\r\nconst addChild = (node, value) => {\r\n  const newNode = createNode(value)\r\n  newNode.parent = node\r\n  node.children = node.children || []\r\n  node.children.push(newNode)\r\n  return newNode\r\n}\r\n\r\nconst travel = (tree, fn) => {\r\n  fn(tree)\r\n  if (tree.children) {\r\n    tree.children.forEach((child) => {\r\n      travel(child, fn)\r\n    })\r\n  }\r\n}\r\n\r\nconst removeNode = (node) => {\r\n  let index = 0\r\n  node.parent.children.forEach((child)=>{\r\n    if (child === node){\r\n      node.parent.children.splice(index)\r\n    }\r\n    index++\r\n  })\r\n}\r\n\r\n\r\n\r\nconst tree = createTree(10),\r\n      child1 = addChild(tree, 20),\r\n      child2 = addChild(tree, 30),\r\n      subChild1 = addChild(child2, 15)\r\n// console.log(tree)\r\n// removeNode(subChild1)\r\n// console.log(tree)\r\n\r\n// travel(tree, (value) => console.log(value))","import './reset.css'\r\nimport './global.css'\r\n\r\nimport './queue.js'\r\nimport './stack.js'\r\nimport './linked-list.js'\r\nimport './tree.js'\r\n"]}